# server configuration
server:
    port: 8091
    compression:
        enabled: true
        mime-types: text/html,text/xml,text/plain,text/json,application/json
    tomcat:
        uri-encoding: utf-8
        accesslog:
            enabled: true
            pattern:
                # {%{X-Real-IP}i %u %t %r %s %b %{Referer}i %{User-Agent}i}
            remote_ip_header: x-forwarded-for

# Database/Redis configuration
spring:
    datasource:
        druid:
            #数据库配置
            driver-class-name: com.mysql.jdbc.Driver
            url: jdbc:mysql://localhost:3306/gold?relaxAutoCommit=true&zeroDateTimeBehavior=convertToNull&useUnicode=true&characterEncoding=utf-8&allowMultiQueries=true
            username: root
            # 如果有必要，需要对密码进行加密
            password:
            # 下面为连接池的补充设置，应用到上面所有数据源中# 初始化大小，最小，最大
            initialSize: 5
            minIdle: 5
            maxActive: 20
            # 配置获取连接等待超时的时间
            maxWait: 60000
            # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
            timeBetweenEvictionRunsMillis: 60000
            # 配置一个连接在池中最小生存的时间，单位是毫秒
            minEvictableIdleTimeMillis: 300000
            testWhileIdle: true
            # 这里建议配置为TRUE，防止取到的连接不可用
            testOnBorrow: false
            testOnReturn: false
            validationQuery: SELECT 1 FROM DUAL
            # 打开PSCache，并且指定每个连接上PSCache的大小
            poolPreparedStatements: false
            maxPoolPreparedStatementPerConnectionSize: 20
            # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
            filters: stat,wall,log4j
            # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
            connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
#            #合并多个DruidDataSource的监控数据
#            #useGlobalDataSourceStat: true
            wall:
                config:
                    conditionAndAlwayTrueAllow: true
                    selectWhereAlwayTrueCheck: true
                    drop-table-allow: false

pagehelper:
    helperDialect: mysql
    reasonable: true
    supportMethodsArguments: true
    params: count=countSql

# Database/Redis configuration
#spring:
#    redis:
#        database: 0
#        host: 127.0.0.1
#        port: 6379
#        pool:
#            max-active: 60
#            max-idle: 60
#            max-wait: 10000
#    redisIsolate:
#        thresholdSize: 51200
#        thresholdTime: 5


# dubbo configuration
dubbo:
    scan:
        basePackages: com.loveq.impl
    application:
        name: service
        qos-enable: true
        qos-port: 22222
    protocal:
        name: dubbo
        port: 20880
    registry:
         protocol: zookeeper
         address: 127.0.0.1:2181

# logback
logging:
    level:
        org:
            apache:
                ibatis: DEBUG
            mybatis: DEBUG
            springframework: INFO
        com:
            love:
                dao: INFO
    config: classpath:logback-local.xml
